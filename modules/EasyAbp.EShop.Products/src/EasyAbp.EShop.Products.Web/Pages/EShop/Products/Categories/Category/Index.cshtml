@page
@using EasyAbp.EShop.Products.Localization
@using EasyAbp.EShop.Products.Web.Menus
@using EasyAbp.EShop.Products.Web.Pages.EShop.Products.Categories.Category
@using Microsoft.AspNetCore.Mvc.Localization
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@inject IHtmlLocalizer<ProductsResource> L
@model IndexModel
@inject IPageLayout PageLayout
@{
    var parentDisplayName = Model.ParentDisplayName.IsNullOrEmpty() ? "" : $" - {Model.ParentDisplayName}";
    PageLayout.Content.Title = L["Menu:Category"].Value + parentDisplayName;
    PageLayout.Content.BreadCrumb.Add(L["Menu:ProductManagement"].Value);
    PageLayout.Content.BreadCrumb.Add(L["Menu:EasyAbpEShop"].Value);
    PageLayout.Content.MenuItemName = ProductsMenus.Category;
}

@section scripts
{
    <abp-script src="/Pages/EShop/Products/Categories/Category/index.js" />
}
@section styles
{
    <abp-style src="/Pages/EShop/Products/Categories/Category/index.css"/>
}
@section content_toolbar
{
    <abp-button id="NewCategoryButton"
                text="@L["CreateCategory"].Value"
                icon="plus"
                size="Smallz"
                button-type="Primary" />
}

<script>
    let parentId = '@Model.ParentId';
</script>

<abp-card>
    <abp-card-body>
        <abp-table striped-rows="true" id="CategoryTable" class="nowrap">
            <thead>
            <tr>
                <th>@L["Actions"]</th>
                <th>@L["CategoryUniqueName"]</th>
                <th>@L["CategoryDisplayName"]</th>
                <th>@L["CategoryDescription"]</th>
                <th>@L["CategoryIsHidden"]</th>
            </tr>
            </thead>
        </abp-table>
    </abp-card-body>
</abp-card>